#!/usr/bin/env python

Import('env')
Import('env_modules')

env_recast = env_modules.Clone()

# Thirdparty source files
if env['builtin_recast']:
    thirdparty_dir = "#thirdparty/recastnavigation/"
    thirdparty_sources = [
        "Recast/Source/Recast.cpp",
        "Recast/Source/RecastAlloc.cpp",
        "Recast/Source/RecastArea.cpp",
        "Recast/Source/RecastAssert.cpp",
        "Recast/Source/RecastContour.cpp",
        "Recast/Source/RecastFilter.cpp",
        "Recast/Source/RecastLayers.cpp",
        "Recast/Source/RecastMesh.cpp",
        "Recast/Source/RecastMeshDetail.cpp",
        "Recast/Source/RecastRasterization.cpp",
        "Recast/Source/RecastRegion.cpp",
        "Detour/Source/DetourAlloc.cpp",
        "Detour/Source/DetourAssert.cpp",
        "Detour/Source/DetourCommon.cpp",
        "Detour/Source/DetourNavMesh.cpp",
        "Detour/Source/DetourNavMeshBuilder.cpp",
        "Detour/Source/DetourNavMeshQuery.cpp",
        "Detour/Source/DetourNode.cpp",
        "DetourCrowd/Source/DetourCrowd.cpp",
        "DetourCrowd/Source/DetourLocalBoundary.cpp",
        "DetourCrowd/Source/DetourObstacleAvoidance.cpp",
        "DetourCrowd/Source/DetourPathCorridor.cpp",
        "DetourCrowd/Source/DetourPathQueue.cpp",
        "DetourCrowd/Source/DetourProximityGrid.cpp",
    ]
    thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

    env_recast.Prepend(CPPPATH=[thirdparty_dir + "/Recast/Include"])
    env_recast.Prepend(CPPPATH=[thirdparty_dir + "/Detour/Include"])
    env_recast.Prepend(CPPPATH=[thirdparty_dir + "/DetourCrowd/Include"])

    env_thirdparty = env_recast.Clone()
    env_thirdparty.disable_warnings()
    env_thirdparty.add_source_files(env.modules_sources, thirdparty_sources)

# Godot source files
env_recast.add_source_files(env.modules_sources, "*.cpp")
